/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-08-29 22:11:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class viewer_002dvod_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

    String app = "live";
    String host="127.0.0.1";
    String stream="myStream";
    String buffer="2";
    String width="100%";
    String height="100%";
    String ice=null;
    String tech=null;

    if (request.getParameter("app") != null) {
      app = request.getParameter("app");
    }

    if (request.getParameter("host") != null) {
      host = request.getParameter("host");
    }

    if (request.getParameter("stream") != null) {
      stream = request.getParameter("stream");
    }

    if (request.getParameter("buffer") != null) {
      buffer = request.getParameter("buffer");
    }

    if (request.getParameter("view") != null) {
      tech = request.getParameter("view");
    }

    if (request.getParameter("ice") != null) {
      ice = request.getParameter("ice");
    }

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"eng\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <meta name=\"description\" content=\"Welcome to the Red5 Pro Server Pages!\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/main.css\">\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css?family=Lato:400,700\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("        <title>VOD Playback of ");
      out.print( stream );
      out.write("</title>\n");
      out.write("    <link href=\"//vjs.zencdn.net/5.19/video-js.min.css\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"//unpkg.com/video.js/dist/video.js\"></script>\n");
      out.write("    <script src=\"//unpkg.com/videojs-contrib-hls/dist/videojs-contrib-hls.js\"></script>\n");
      out.write("    <script src=\"//unpkg.com/videojs-flash/dist/videojs-flash.js\"></script>\n");
      out.write("    <script src=\"//webrtc.github.io/adapter/adapter-latest.js\"></script>\n");
      out.write("    <script src=\"lib/screenfull/screenfull.min.js\"></script>\n");
      out.write("    <link href=\"lib/red5pro/red5pro-media.css\" rel=\"stylesheet\">\n");
      out.write("        <style>\n");
      out.write("          object:focus {\n");
      out.write("            outline:none;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          #video-holder, .video-element {\n");
      out.write("            width: ");
      out.print(width);
      out.write(";\n");
      out.write("            height: ");
      out.print(height);
      out.write(";\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          #video-holder {\n");
      out.write("            max-width: 600px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          #video-container {\n");
      out.write("            border-radius: 5px;\n");
      out.write("            background-color: #e3e3e3;\n");
      out.write("            padding: 10px;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          #status-field {\n");
      out.write("            text-align: center;\n");
      out.write("            padding: 10px;\n");
      out.write("            color: #fff;\n");
      out.write("            margin: 10px 0;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          .status-alert {\n");
      out.write("            background-color: rgb(227, 25, 0);\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          .status-message {\n");
      out.write("            background-color: #aaa;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          #event-log-field {\n");
      out.write("            background-color: #c0c0c0;\n");
      out.write("            border-radius: 6px;\n");
      out.write("            padding: 10px;\n");
      out.write("            margin: 14px;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("      .red5pro-media-control-bar {\n");
      out.write("        min-height: 40px;\n");
      out.write("      }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("    <template id=\"flash-playback\">\n");
      out.write("      <object type=\"application/x-shockwave-flash\" id=\"red5pro-subscriber\" name=\"red5pro-subscriber\" align=\"middle\" data=\"lib/red5pro/red5pro-subscriber.swf\" width=\"100%\" height=\"100%\" class=\"red5pro-media-background red5pro-media\">\n");
      out.write("        <param name=\"quality\" value=\"high\">\n");
      out.write("        <param name=\"wmode\" value=\"opaque\">\n");
      out.write("        <param name=\"bgcolor\" value=\"#000000\">\n");
      out.write("        <param name=\"allowscriptaccess\" value=\"always\">\n");
      out.write("        <param name=\"allowfullscreen\" value=\"true\">\n");
      out.write("        <param name=\"allownetworking\" value=\"all\">\n");
      out.write("      </object>\n");
      out.write("    </template>\n");
      out.write("      <div id=\"video-container\">\n");
      out.write("            <div id=\"video-holder\">\n");
      out.write("              <video id=\"red5pro-subscriber\"\n");
      out.write("                      controls autoplay playsinline\n");
      out.write("                      class=\"red5pro-media red5pro-media-background\">\n");
      out.write("              </video>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"status-field\" class=\"status-message\"></div>\n");
      out.write("            <div id=\"event-log-field\" class=\"event-log-field\">\n");
      out.write("              <div style=\"padding: 10px 0\">\n");
      out.write("                <p><span style=\"float: left;\">Event Log:</span><button id=\"clear-log-button\" style=\"float: right;\">clear</button></p>\n");
      out.write("                <div style=\"clear: both;\"></div>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("      </div>\n");
      out.write("      <script src=\"lib/es6/es6-array.js\"></script>\n");
      out.write("      <script src=\"lib/es6/es6-bind.js\"></script>\n");
      out.write("      <script src=\"lib/es6/es6-fetch.js\"></script>\n");
      out.write("      <script src=\"lib/es6/es6-object-assign.js\"></script>\n");
      out.write("      <script src=\"lib/es6/es6-promise.min.js\"></script>\n");
      out.write("      <script src=\"lib/jquery-1.12.4.min.js\"></script>\n");
      out.write("      <script src=\"lib/red5pro/red5pro-sdk.min.js\"></script>\n");
      out.write("      <script src=\"script/r5pro-ice-utils.js\"></script>\n");
      out.write("        <script>\n");
      out.write("          // Access selected data from the `opener` window.\n");
      out.write("          var opener = window.opener;\n");
      out.write("          if (opener) {\n");
      out.write("            var json = opener.streamdata;\n");
      out.write("            var streamDataStr = decodeURIComponent(json);\n");
      out.write("            var streamData = JSON.parse(streamDataStr);\n");
      out.write("            console.log('Stream data:\\r\\n' + JSON.stringify(streamData, null, 2));\n");
      out.write("            window.streamData = streamData;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          // writing params to global.\n");
      out.write("          window.targetHost = \"");
      out.print(host);
      out.write("\";\n");
      out.write("          window.r5proApp = \"");
      out.print(app);
      out.write("\";\n");
      out.write("          window.r5proStreamName = \"");
      out.print(stream);
      out.write("\";\n");
      out.write("          window.r5proBuffer = Number(\"");
      out.print(buffer);
      out.write("\");\n");
      out.write("          window.r5proVideoWidth = \"");
      out.print(width);
      out.write("\";\n");
      out.write("          window.r5proVideoHeight = \"");
      out.print(height);
      out.write("\";\n");
      out.write("          window.r5proAutosubscribe = true;\n");
      out.write("          window.r5proIce = window.determineIceServers('");
      out.print(ice);
      out.write("');\n");
      out.write("\n");
      out.write("          var viewTech = \"");
      out.print(tech);
      out.write("\";\n");
      out.write("          if (viewTech && viewTech !== 'null') {\n");
      out.write("            window.r5proViewTech = viewTech;\n");
      out.write("          }\n");
      out.write("        </script>\n");
      out.write("      <script src=\"script/r5pro-viewer-vod-failover.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
